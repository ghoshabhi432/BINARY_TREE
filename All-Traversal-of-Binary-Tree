input:
2 4 7 -1 -1 -1 1 8 -1 -1 3 -1 -1
output:
inorder :
7 4 2 8 1 3 
post-order :
7 4 8 3 1 2 
pre-order :
2 4 7 1 8 3

//all traversals..............

#include <bits/stdc++.h>
using namespace std;
class node{
  public:
  int data;
  node *left,*right;
  
  node(int data){
      this->data=data;
      this->left=NULL;
      this->right=NULL;
  }
};
node* createTree(){
    node *root=NULL;
    int data;
    
    cin>>data;
    if(data==-1) 
    {
        return NULL;
    }
    root=new node(data);
    //cout<<"left :"<<data<<endl;
    root->left=createTree();
    
    //cout<<"right :"<<data<<endl;
    root->right=createTree();
    
    return root;
}
void inorder(node* root){
    if(root==NULL){
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
void postorder(node* root){
    if(root==NULL){
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}
void preorder(node* root){
    if(root==NULL){
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}

int main() {
	node *root=createTree();
	cout<<"inorder :"<<endl;
	inorder(root);
	cout<<endl;
	cout<<"post-order :"<<endl;
	postorder(root);
	cout<<endl;
	cout<<"pre-order :"<<endl;
	preorder(root);
	cout<<endl;
	return 0;
}
